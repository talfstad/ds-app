active_snippets:
	- FK_active_snippets_url_endpoint_id_endpoints_id
	- FK_active_snippets_user_id_wp_users_ID

campaigns:
	- FK_campaigns_user_id_wp_users_ID

campaigns_with_domains:
	- FK_campaigns_with_domains_campaign_id_campaigns_id
	- FK_campaigns_with_domains_user_id_wp_users_ID
	- FK_campaigns_with_domains_domain_id_domains_id

deployed_landers:
	- FK_deployed_landers_lander_id_landers_id
	- FK_deployed_landers_user_id_wp_users_ID

domains:
	- FK_domains_user_id_wp_users_ID

jobs:
	- FK_jobs_user_id_wp_users_ID

landers:
	- FK_landers_user_id_wp_users_ID

landers_with_campaigns:
	- FK_landers_with_campaigns_campaign_id_campaigns_id
	- FK_landers_with_campaigns_lander_id_landers_id
	- FK_landers_with_campaigns_user_id_wp_users_ID

snippets:
	- FK_snippets_user_id_wp_users_ID

url_endpoints:
	- FK_url_endpoints_lander_id_landers_id
	- FK_url_endpoints_user_id_wp_users_ID

user_settings:
	- FK_user_settings_user_id_wp_users_ID



TDOO


- createDirectory
- push original

- optimize whats in staging (certain optimizations need to optimize each endpoint)
- createDirectory for optimized
- push optimized
- pagespeed test each endpoint
- save endpoints, pagespeed (in url_endpoints) & lander to db
- return response success


rip:
rips to staging

add new lander:
upload to staging

common:
createDirectory_original
createDirectory_optimized
optimize each endpoint
pushes it to the directory
pagescore test each endpoint
save to db


new requirements:
1. push both optimized and regular
2. keep track of pagescores in db



---- optimizations comes to db_api level for landers







edit:

save endpoint/js/css ->

updated code goes to server, pull down lander from s3, replace the file in staging, optimize full lander, push to directory, pagespeed test each endpoint






if only 1 folder on unzip and that's all there is (excluding . files), then move the contents of it to the root




