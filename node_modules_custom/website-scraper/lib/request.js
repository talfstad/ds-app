var _ = require('lodash');
var Promise = require('bluebird');
var request = require('request');
var get = Promise.promisify(request.get);
var path = require('path');
var phantom = require('phantom');

function makeRequest(options, url) {
  var requestOptions = _.clone(options);
  requestOptions.url = url;

  // if the basename is index.html then we wait until its loaded before returning the object or directory /
  if (path.extname(url) == ".html" || path.extname(url) == ".php" || url.substr(url.length - 1) === "/") {
    //return a promise that resolves at the end of this
    return new Promise(function(resolve, reject) {
      phantom.create([], { logLevel: 'error' }).then(function(ph) {
        ph.createPage().then(function(page) {

          // var width = 1024;
          // var height = 768;

          // page.viewportSize = {
          //   width: width,
          //   height: height
          // };
          // page.zoomFactor = 1;

          page.open(url, { headers: requestOptions.headers }).then(function(status) {
            var onPageReady = function() {
              page.evaluate(function() {
                return document.documentElement.outerHTML;
              }).then(function(content) {

                page.close();
                ph.exit();

                resolve({
                  url: url,
                  body: content
                });
              });
            };

            var checkReadyState = function() {
              setTimeout(function() {
                page.evaluate(function() {
                  return document.readyState;
                }).then(function(readyState) {
                  if (readyState === "complete") {
                    onPageReady();
                  } else {
                    checkReadyState();
                  }
                });
              }, 100);
            };

            checkReadyState();

          });
        });
      });
    });

  } else {
    return get(requestOptions).then(function handleResponse(data) {
      return {
        url: data.request.href,
        body: data.body
      };
    });
  }
}

module.exports = makeRequest;
