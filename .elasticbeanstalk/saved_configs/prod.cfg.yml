EnvironmentConfigurationMetadata:
  Description: Configuration created from the EB CLI using "eb config save".
  DateCreated: '1465066916000'
  DateModified: '1465066916000'
SolutionStack: 64bit Amazon Linux 2016.03 v2.1.0 running Docker 1.9.1
OptionSettings:
  aws:elasticbeanstalk:command:
    Timeout: '3600'
    BatchSize: '30'
    BatchSizeType: Percentage
    IgnoreHealthCheck: true
    DeploymentPolicy: Rolling
  aws:elb:policies:
    ConnectionDrainingEnabled: true
    ConnectionDrainingTimeout: '3600'
    ConnectionSettingIdleTimeout: '3600'
  aws:elb:loadbalancer:
    ManagedSecurityGroup: sg-d83bf4be
    SecurityGroups: sg-d83bf4be
    LoadBalancerHTTPSPort: '443'
    CrossZone: true
    LoadBalancerHTTPPort: '80'
    SSLCertificateId: arn:aws:iam::834835117621:server-certificate/STAR_landerds_com.crt
  aws:elasticbeanstalk:environment:
    ServiceRole: aws-elasticbeanstalk-service-role
    EnvironmentType: LoadBalanced
  aws:elasticbeanstalk:healthreporting:system:
    AWSEBHealthdGroupId: d3c98381-f798-4dc3-9a63-1a37a0978e97
    SystemType: enhanced
  aws:ec2:vpc:
    Subnets: subnet-aa2c34cf
    VPCId: vpc-976f7af2
    ELBSubnets: subnet-aa2c34cf
    ELBScheme: public
    AssociatePublicIpAddress: true
  aws:autoscaling:launchconfiguration:
    SecurityGroups: sg-383bf45e
    RootVolumeSize: '10'
    IamInstanceProfile: aws-elasticbeanstalk-ec2-role
    InstanceType: m1.small
    EC2KeyName: BuildcaveKeyPair
  aws:autoscaling:asg:
    MinSize: '1'
    MaxSize: '4'
  aws:autoscaling:updatepolicy:rollingupdate:
    RollingUpdateType: Health
    RollingUpdateEnabled: true
EnvironmentTier:
  Type: Standard
  Name: WebServer
AWSConfigurationTemplateVersion: 1.1.0.0
Tags:
  env: prod
